{"ast":null,"code":"var _jsxFileName = \"/home/testing/koii network/Tutorial/linktree_app/src/LinksComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { truncateAddress } from \"./helpers\";\nimport Web3 from 'web3';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LinksComponent() {\n  _s();\n  const [links, setLinks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [userAddress, setUserAddress] = useState(\"\");\n  useEffect(() => {\n    // Check if Metamask is installed\n    if (typeof window.ethereum !== 'undefined') {\n      console.log('Metamask is installed!');\n      const web3 = new Web3(window.ethereum);\n\n      // Request permission to access accounts\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(accounts => {\n        // Accounts now exposed\n        const userAddress = accounts[0];\n        console.log('User address:', userAddress);\n        setUserAddress(userAddress);\n        signAndFetchData(userAddress);\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      console.log('Metamask is not installed.');\n\n      // Prompt the user to install Metamask\n      alert('Please install Metamask to continue.');\n    }\n  }, []);\n  const signAndFetchData = async userAddress => {\n    try {\n      const data = {\n        uuid: uuidv4(),\n        linktree: [{\n          key: 'official',\n          label: 'Official Website',\n          redirectUrl: 'https://spheron.network/'\n        }, {\n          key: 'twitter',\n          label: 'Twitter',\n          redirectUrl: 'https://twitter.com/blockchainbalak'\n        }, {\n          key: 'github',\n          label: 'GitHub',\n          redirectUrl: 'https://github.com/spheronFdn/'\n        }],\n        timestamp: Date.now()\n      };\n\n      // Generate a message hash from the data\n      const message = JSON.stringify(data);\n      const messageHash = ethereumjs.Util.keccak256(message);\n\n      // Sign the message hash with the user's Metamask account\n      const signature = await ethereum.request({\n        method: 'personal_sign',\n        params: [messageHash, userAddress]\n      });\n\n      // Construct the payload for the POST request\n      const payload = {\n        data,\n        publicKey: userAddress,\n        signature\n      };\n\n      // Make the POST request to get the linktree data\n      const response = await axios.post(`https://k2-tasknet-ports-3.koii.live/task/HjWJmb2gcwwm99VhyNVJZir3ToAJTfUB4j7buWnMMUEP/linktree`, payload);\n      const linktreeData = response.data.data.linktree;\n      const publicKey = response.data.publicKey;\n      const formattedLinks = linktreeData.map(link => ({\n        name: link.label,\n        url: link.redirectUrl\n      }));\n      console.log(response);\n      setTitle(publicKey);\n      setLinks(formattedLinks);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"public-key\",\n      children: truncateAddress(userAddress)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"links\",\n      children: links.map((link, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"link\",\n        href: link.url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: link.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [\"Link Tree\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.koii.network/\",\n        className: \"by-koii\",\n        children: \"By Koii Network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(LinksComponent, \"v4V1T4wm2cnOKM0+ezHys+mlgVs=\");\n_c = LinksComponent;\nexport default LinksComponent;\nvar _c;\n$RefreshReg$(_c, \"LinksComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","truncateAddress","Web3","v4","uuidv4","jsxDEV","_jsxDEV","LinksComponent","_s","links","setLinks","title","setTitle","userAddress","setUserAddress","window","ethereum","console","log","web3","request","method","then","accounts","signAndFetchData","catch","error","alert","data","uuid","linktree","key","label","redirectUrl","timestamp","Date","now","message","JSON","stringify","messageHash","ethereumjs","Util","keccak256","signature","params","payload","publicKey","response","post","linktreeData","formattedLinks","map","link","name","url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","href","target","rel","_c","$RefreshReg$"],"sources":["/home/testing/koii network/Tutorial/linktree_app/src/LinksComponent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { truncateAddress } from \"./helpers\";\nimport Web3 from 'web3';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction LinksComponent() {\n  const [links, setLinks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [userAddress, setUserAddress] = useState(\"\");\n\n  useEffect(() => {\n    // Check if Metamask is installed\n    if (typeof window.ethereum !== 'undefined') {\n      console.log('Metamask is installed!');\n      const web3 = new Web3(window.ethereum);\n\n      // Request permission to access accounts\n      window.ethereum.request({ method: 'eth_requestAccounts' })\n        .then((accounts) => {\n          // Accounts now exposed\n          const userAddress = accounts[0];\n          console.log('User address:', userAddress);\n          setUserAddress(userAddress);\n          signAndFetchData(userAddress);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    } else {\n      console.log('Metamask is not installed.');\n\n      // Prompt the user to install Metamask\n      alert('Please install Metamask to continue.');\n    }\n  }, []);\n\n  const signAndFetchData = async (userAddress) => {\n    try {\n      const data = {\n        uuid: uuidv4(),\n        linktree: [\n          {\n            key: 'official',\n            label: 'Official Website',\n            redirectUrl: 'https://spheron.network/',\n          },\n          {\n            key: 'twitter',\n            label: 'Twitter',\n            redirectUrl: 'https://twitter.com/blockchainbalak',\n          },\n          {\n            key: 'github',\n            label: 'GitHub',\n            redirectUrl: 'https://github.com/spheronFdn/',\n          },\n        ],\n        timestamp: Date.now(),\n      };\n  \n      // Generate a message hash from the data\n      const message = JSON.stringify(data);\n      const messageHash = ethereumjs.Util.keccak256(message);\n  \n      // Sign the message hash with the user's Metamask account\n      const signature = await ethereum.request({\n        method: 'personal_sign',\n        params: [messageHash, userAddress],\n      });\n  \n      // Construct the payload for the POST request\n      const payload = {\n        data,\n        publicKey: userAddress,\n        signature,\n      };\n  \n      // Make the POST request to get the linktree data\n      const response = await axios.post(\n        `https://k2-tasknet-ports-3.koii.live/task/HjWJmb2gcwwm99VhyNVJZir3ToAJTfUB4j7buWnMMUEP/linktree`,\n        payload\n      );\n  \n      const linktreeData = response.data.data.linktree;\n      const publicKey = response.data.publicKey;\n      const formattedLinks = linktreeData.map((link) => ({\n        name: link.label,\n        url: link.redirectUrl,\n      }));\n      console.log(response);\n      setTitle(publicKey);\n      setLinks(formattedLinks);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  \n\n  return (\n    <div className=\"container\">\n      <p className=\"public-key\">{truncateAddress(userAddress)}</p>\n      <div className=\"links\">\n        {links.map((link, index) => (\n          <a\n            className=\"link\"\n            key={index}\n            href={link.url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {link.name}\n          </a>\n        ))}\n      </div>\n      <div className=\"footer\">\n        Link Tree{\" \"}\n        <a href=\"https://www.koii.network/\" className=\"by-koii\">\n          By Koii Network\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default LinksComponent;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}